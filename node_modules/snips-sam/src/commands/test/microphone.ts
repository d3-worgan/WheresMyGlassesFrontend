import chalk from 'chalk'
import * as yargs from 'yargs'
import { cli } from '../../cli'
import { SSHService, SnipsServices } from '../../session/ssh'

exports.command = 'microphone'
exports.desc = 'Test a microphone'

exports.handler = async (_: yargs.Argv) => {
    const ssh = new SSHService()
    await ssh.connect()
    .catch(e => {
        cli.stream.error(e)
        process.exit()
    })

    cli.stream.hint('Plug in your microphone and turn on your speaker')

    try {
        cli.stream.println('Stopping snips audio server')
        await ssh.stopService(SnipsServices.audioServer).catch(_ => {})

        const recordingFile = 'sam_recording'
        ssh.recordAudio(recordingFile).catch(_ => {})
        await cli.prompt.waitForKeypress('Say something in the microphone, then press a key to continue...', async () => {
            cli.stream.success()
        })

        await ssh.stopRecording().catch(_ => {})
        cli.stream.loading('Playing the recording')
        await ssh.playAudio(recordingFile).catch(_ => {})
        cli.stream.success()
        await ssh.removeFile(`${recordingFile}.wav`).catch(_ => {})

        cli.stream.println('Relaunching snips-audio-server')
        await ssh.relaunchService(SnipsServices.audioServer).catch(_ => {})

    } catch (e) {
        cli.stream.stopAndClear()
        cli.stream.error(`Error testing the microphone: ${e.message}`)
        ssh.disconnect()
        process.exit()
    }

    cli.stream.hint("Didn't hear anything? Check the recording level of your microphone and the volume of the speaker.")
    cli.stream.hint(`Alternatively you can run ${chalk.blue('sam setup audio')} to setup your microphone`)
    ssh.disconnect()
    process.exit()
}
