import * as yargs from 'yargs'
import { cli } from '../../cli'
import { SSHService, availableSnipsServices } from '../../session'
import chalk from '../../../node_modules/chalk'

exports.command = 'install <[services...]>'
exports.desc = 'Install Snips services from apt'
exports.builder = yargs => {
    return yargs
        .positional('services', {
            describe: 'Service(s) to install.',
            type: 'array',
            choices: availableSnipsServices,
            requiresArg: true,
        })
        .option('verbose', {
            demandOption: false,
            describe: 'Include remote logs',
            type: 'boolean',
            alias: 'v',
        })
}

exports.handler = async (argv: yargs.Argv) => {
    const services: string[] = JSON.parse(JSON.stringify(argv)).services
    const verbose: boolean = JSON.parse(JSON.stringify(argv)).verbose

    const ssh = new SSHService()
    try {
        await ssh.connect()
        if (verbose) cli.stream.println(chalk.green(`Installing ${services.join(' ')}`))
        else cli.stream.loading(`Installing ${services.join(' ')}`)

        await ssh.aptGetY(services, log => {
            if (verbose) cli.stream.print(log)
        })
        if (!verbose) cli.stream.success()
        cli.stream.loading('Relaunching Snips services')
        await ssh.relaunchServices()
        cli.stream.success()
    } catch (e) {
        cli.stream.error(e)
        process.exit()
    }
    ssh.disconnect()
}
